"""
Tarife, kontÃ¶r ve paket iÅŸlemleri iÃ§in Ã¶zel agent
"""

from langchain_ollama import OllamaLLM
from langchain_core.prompts import ChatPromptTemplate
from typing import List


class TarifeAgent:
    """Tarife, kontÃ¶r ve paket iÅŸlemleri iÃ§in Ã¶zel agent sÄ±nÄ±fÄ±"""
    
    def __init__(self, model_name: str = "gemma3:latest"):
        """
        Tarife Agent'i baÅŸlatÄ±r
        
        Args:
            model_name: Ollama'da kullanÄ±lacak model adÄ± 
        """
        self.llm = OllamaLLM(
            model=model_name,
            base_url="http://localhost:11434"
        )
        
        # Tarife ve paket konularÄ±na Ã¶zel prompt
        self.prompt = ChatPromptTemplate.from_template(
            """Sen ABCX'Ã¼n tarife ve paket departmanÄ±ndan bir uzmansÄ±n. 
            MÃ¼ÅŸterilerin tarife deÄŸiÅŸikliÄŸi, paket seÃ§imi, kontÃ¶r iÅŸlemleri konularÄ±nda yardÄ±mcÄ± oluyorsun.
            
            Hizmetlerin:
            - Tarife seÃ§imi ve deÄŸiÅŸikliÄŸi
            - Ä°nternet paketleri (Fiber, ADSL, Mobil)
            - KonuÅŸma dakikalarÄ± ve SMS paketleri
            - KontÃ¶r yÃ¼kleme iÅŸlemleri
            - Kampanya ve indirimler
            - Paket kullanÄ±m sorgularÄ±
            - Hat aÃ§ma/kapatma iÅŸlemleri
            
            MÃ¼ÅŸteriye ihtiyaÃ§larÄ±na uygun paketleri Ã¶ner.
            Fiyat ve Ã¶zellik karÅŸÄ±laÅŸtÄ±rmalarÄ± yap.
            AdÄ±m adÄ±m paket deÄŸiÅŸim sÃ¼recini anlat.
            
            MÃ¼ÅŸteri talebi: {user_input}
            
            Tarife UzmanÄ± YanÄ±tÄ±:"""
        )
    
    def handle_tarife_request(self, user_input: str, history: List[str] = None) -> str:
        """
        Tarife ve paket ile ilgili mÃ¼ÅŸteri taleplerini iÅŸler

        Args:
            user_input: MÃ¼ÅŸterinin tarife talebi
            history: Ã–nceki konuÅŸma geÃ§miÅŸi

        Returns:
            Tarife uzmanÄ±nÄ±n yanÄ±tÄ±
        """
        print(f"ğŸ“¦ Tarife Agent: '{user_input}' talebi iÅŸleniyor...")

        # KonuÅŸma geÃ§miÅŸini formatla
        conversation_context = ""
        if history:
            conversation_context = "\n".join([f"- {msg}" for msg in history[-5:]])  # Son 5 mesaj
            conversation_context = f"\n\nÃ–nceki konuÅŸma:\n{conversation_context}\n"

        # Prompt'u gÃ¼ncelle
        updated_prompt = ChatPromptTemplate.from_template(
            """Sen bir telekomÃ¼nikasyon ÅŸirketi tarife ve paket uzmanÄ±sÄ±n.
            MÃ¼ÅŸterilerinizle gÃ¼ler yÃ¼zlÃ¼, anlayÄ±ÅŸlÄ± ve bilgili bir ÅŸekilde konuÅŸ.
            
            UzmanlÄ±k alanlarÄ±n:
            - Ä°nternet paketleri (Fiber, ADSL, Mobil)
            - KonuÅŸma tarifeleri ve dakika paketleri
            - SMS paketleri
            - Kampanya ve promosyonlar
            - Hat aÃ§ma/kapama iÅŸlemleri
            - Tarife deÄŸiÅŸiklikleri
            - KontÃ¶r yÃ¼kleme
            
            GÃ¶revlerin:
            1. MÃ¼ÅŸterinin ihtiyacÄ±nÄ± anlayÄ±p en uygun paketi Ã¶ner
            2. Mevcut paket bilgilerini net bir ÅŸekilde aÃ§Ä±kla
            3. Kampanya ve avantajlarÄ± detaylÄ± anlat
            4. MÃ¼ÅŸteriyi tatmin edici Ã§Ã¶zÃ¼mler sun{conversation_context}
            
            MÃ¼ÅŸteri talebi: {user_input}
            
            Tarife UzmanÄ± YanÄ±tÄ±:"""
        )
        
        formatted_prompt = updated_prompt.format(
            user_input=user_input,
            conversation_context=conversation_context
        )
        response = self.llm.invoke(formatted_prompt)
        
        print(f"ğŸ“¦ Tarife Agent yanÄ±tÄ±: {response[:100]}...")
        return response
